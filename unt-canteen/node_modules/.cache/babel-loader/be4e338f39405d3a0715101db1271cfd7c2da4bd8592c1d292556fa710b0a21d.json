{"ast":null,"code":"// import React, { useContext, useState, useEffect } from \"react\"\n// import { auth } from \"../firebase\"\n\n// const AuthContext = React.createContext()\n\n// export function useAuth() {\n//   return useContext(AuthContext)\n// }\n\n// export function AuthProvider({ children }) {\n//   const [currentUser, setCurrentUser] = useState()\n//   const [loading, setLoading] = useState(true)\n\n//   function signup(email, password) {\n//     return auth.createUserWithEmailAndPassword(email, password)\n//   }\n\n//   function login(email, password) {\n//     return auth.signInWithEmailAndPassword(email, password)\n//   }\n\n//   function logout() {\n//     return auth.signOut()\n//   }\n\n//   function resetPassword(email) {\n//     return auth.sendPasswordResetEmail(email)\n//   }\n\n//   function updateEmail(email) {\n//     return currentUser.updateEmail(email)\n//   }\n\n//   function updatePassword(password) {\n//     return currentUser.updatePassword(password)\n//   }\n\n//   useEffect(() => {\n//     const unsubscribe = auth.onAuthStateChanged(user => {\n//       setCurrentUser(user)\n//       setLoading(false)\n//     })\n\n//     return unsubscribe\n//   }, [])\n//   const value = {\n//     currentUser,\n//     login,\n//     signup,\n//     logout,\n//     resetPassword,\n//     updateEmail,\n//     updatePassword\n//   }\n\n//   return (\n//     <AuthContext.Provider value={value}>\n//       {!loading && children}\n//     </AuthContext.Provider>\n//   )\n// }","map":{"version":3,"names":[],"sources":["C:/Downloads OS/Team7/unt-canteen/src/contexts/AuthContext.js"],"sourcesContent":["// import React, { useContext, useState, useEffect } from \"react\"\r\n// import { auth } from \"../firebase\"\r\n\r\n// const AuthContext = React.createContext()\r\n\r\n// export function useAuth() {\r\n//   return useContext(AuthContext)\r\n// }\r\n\r\n// export function AuthProvider({ children }) {\r\n//   const [currentUser, setCurrentUser] = useState()\r\n//   const [loading, setLoading] = useState(true)\r\n\r\n//   function signup(email, password) {\r\n//     return auth.createUserWithEmailAndPassword(email, password)\r\n//   }\r\n\r\n//   function login(email, password) {\r\n//     return auth.signInWithEmailAndPassword(email, password)\r\n//   }\r\n\r\n//   function logout() {\r\n//     return auth.signOut()\r\n//   }\r\n\r\n//   function resetPassword(email) {\r\n//     return auth.sendPasswordResetEmail(email)\r\n//   }\r\n\r\n//   function updateEmail(email) {\r\n//     return currentUser.updateEmail(email)\r\n//   }\r\n\r\n//   function updatePassword(password) {\r\n//     return currentUser.updatePassword(password)\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     const unsubscribe = auth.onAuthStateChanged(user => {\r\n//       setCurrentUser(user)\r\n//       setLoading(false)\r\n//     })\r\n\r\n//     return unsubscribe\r\n//   }, [])\r\n//   const value = {\r\n//     currentUser,\r\n//     login,\r\n//     signup,\r\n//     logout,\r\n//     resetPassword,\r\n//     updateEmail,\r\n//     updatePassword\r\n//   }\r\n\r\n//   return (\r\n//     <AuthContext.Provider value={value}>\r\n//       {!loading && children}\r\n//     </AuthContext.Provider>\r\n//   )\r\n// }"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}